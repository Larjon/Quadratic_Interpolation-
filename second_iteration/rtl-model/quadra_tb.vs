`include "quadra.vh"

`timescale 1ps/1ps

`define T_CLK 10000 // clock period [ps]

module quadra_tb ();

    // -------------------------------------------------------------------------
    // Sygna≈Çy
    // -------------------------------------------------------------------------
    x_t  x;
    dv_t x_dv;

    y_t  y;
    dv_t y_dv;

    ck_t clk;
    rs_t rst_b;

    // -------------------------------------------------------------------------
    // DUT
    // -------------------------------------------------------------------------
    quadra_top u0 (
        .clk(clk),
        .rst_b(rst_b),
        .x(x),
        .x_dv(x_dv),
        .y(y),
        .y_dv(y_dv)
    );

    // -------------------------------------------------------------------------
    // Zegar
    // -------------------------------------------------------------------------
    initial begin
        clk = 0;
        forever #(`T_CLK/2) clk = ~clk;
    end

    // -------------------------------------------------------------------------
    // Reset
    // -------------------------------------------------------------------------
    initial begin
        rst_b = 1;
        repeat(2) @(posedge clk);
        rst_b = 0;
        repeat(1) @(posedge clk);
        rst_b = 1;
    end

endmodule
