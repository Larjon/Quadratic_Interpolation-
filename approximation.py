import math

def bin_to_float_unsigned(bin_str, scale):

    return int(bin_str, 2) / scale

def bin_to_float_signed(bin_str, scale):

    width = len(bin_str)
    n = int(bin_str, 2)

    if bin_str[0] == '1':
        n -= (1 << width)
    return n / scale

x           = "111111111111111111111111" 
x1          = "1111111"                  
x2          = "11111111111111111"         
x2_fxd      = "011111111111111111000000"   
sq          = "1111000000000000000001000000000000000000000000" 
a           = "11111111010101010000000100001100"  
b           = "11100000000001110010010001000110"  
c           = "00000001010101011111110111100111"  
t0          = "11111111010101010000000100001100"  
t0_aligned  = "11110101010100000001000011000000000000000000000000000000000000000000000000000000000000"  
t1          = "1110000000000111001101000100001001101101110111010000000"  
t1_aligned  = "00000000011100110100010000100110110111011101000000000000000000000000000000000000000000"  
t2          = "11111111111111111110101010100000001001101110011111110111100111000000000000000000000000"  
s_aligned   = "11110101110000110011111110000111000001001011011111110111100111000000000000000000000000"  
s_round     = "11110101110000110011111111000111000001001011011111110111100111000000000000000000000000"  
y           = "1111010111000011001111111" 



x            = "111111111111111111111111"
x1           = "1111111"
x2           = "11111111111111111"
x2_fxd       = "011111111111111111000000"
sq           = "1111000000000000000001000000000000000000000000"
a            = "11111111010101010000000100001100"
b            = "11100000000001110010010001000110"
c            = "00000001010101011111110111100111"
t0_aligned   = "11110101010100000001000011000000000000000000000000000000000000000000000000000000000000000000000000"
t1_tmp       = "1110000000000111001101000100001001101101110111010000000"
t1_aligned   = "00000000011100110100010000100110110111011101000000000000000000000000000000000000000000000000000000"
t2           = "00000000000000000000000000010100000010011110000011011110011111110111100111000000000000000000000000"
s_aligned    = "11110101110000110101010011111010111001111011000011011110011111110111100111000000000000000000000000"
s_round      = "11110101110000110101010100111010111001111011000011011110011111110111100111000000000000000000000000"
s_shifted    = "11111111111111111111111111111111111111111111111111111111111111111111111111111010111000011010101010"
y            = "1111010111000011010101010"

x              = "111111111111111111111111"
x2_fxd         = "011111111111111111000000"
sq             = "0000000000000000000000000000000000011111111110"
a              = "11111111010101010000000100001100"
b              = "11100000000001110010010001000110"
c              = "00000001010101011111110111100111"
t0_aligned     = "1111111111111101010101000000010000110000000000000000000000000000000000"
t1_tmp         = "1110000000000111001101000100001001101101110111010000000"
t1_aligned     = "1111111110000000000111001101000100001001101101110111010000000000000000"
t2_tmp         = "11111111111111111111111111111110101010100000001001101110011111110111100111000000000000000000000000"
t2_aligned     = "1111111111111111111111111111111010101010000000100110111001111111011110"
s_aligned      = "1111111101111101011100001101001111100011101110011110001001111111011110"
s_rounded      = "1111111101111101011100010001001111100011101110011110001001111111011110"
s_shifted      = "1111111111111111111111111111111111111111111111111111101111101011100010"
y              = "1000100010011010111110010"



x_float = bin_to_float_unsigned(x, 1 << 23)
x1_int = int(x1, 2)
x2_float = bin_to_float_unsigned(x2, 1 << 23)
x2_fxd_float = bin_to_float_unsigned(x2_fxd, 1 << 29)
sq_float = bin_to_float_unsigned(sq, 1 << 23)
a_float = bin_to_float_signed(a, 1 << 28)
b_float = bin_to_float_signed(b, 1 << 28)
c_float = bin_to_float_signed(c, 1 << 28)
t0_float = bin_to_float_signed(t0, 1 << 28)
t0_aligned_int = bin_to_float_signed(t0_aligned, 1 << 60)
t1_float = bin_to_float_signed(t1, 1 << 57)
t1_aligned_float = bin_to_float_signed(t1_aligned, 1 << 66)
t2_float = bin_to_float_signed(t2, 1 << 86)
s_aligned_float = bin_to_float_signed(s_aligned, 1 << 68)
s_round_float = bin_to_float_signed(s_round, 1 << 97)
y_float = bin_to_float_signed(y, 1 << 25)


print("x            =", x_float)
print("x1           =", x1_int)
print("x2           =", x2_float)
print("x2_fxd       =", x2_fxd_float)
print("sq           =", sq_float)
print("my sq        =", x2_fxd_float*x2_fxd_float)
print("a            =", a_float)
print("b            =", b_float)
print("c            =", c_float)
print("t0 (a)       =", t0_float)
print("t0_aligned   =", t0_aligned_int)
print("t1           =", t1_float)
print("ta = b* x2   =", b_float*x2_fxd_float)
print("t1_aligned   =", t1_aligned_float)
print("t2           =", t2_float)
print("t2 sq*c      =", sq_float*c_float)
print("s_aligned    =", s_aligned_float)
print("s Moje       =", t0_float+t2_float+t1_float)
print("s_round      =", s_round_float)
print("y (s2.23)    =", y_float)


x = 0.999992
x1 = int(x * 64)

x1_base = x1 / 64.0
x2 = x - x1_base

# a = -0.0417470186948776245117187500
# b = -1.9983062744140625000000000000
# c = 0.0991210937500000000000000000

x2_float = 0.01562488079071045
approx = a_float + b_float * x2_float + c_float * x2_float * x2_float

real = math.sin((2 * x) - (math.pi / 4))

print("")
print("x1 =", x1)
print("x1_base =", x1_base)
print("x2 =", x2_float)
print("Approximation:", approx)
print("True sin():   ", real)
print("Error:        ", abs(real - approx))
print("")


approx = a_float + b_float * x2_float + c_float * sq_float
real = math.sin((2 * x2_float) - (math.pi / 4))

print("x1 =", x1)
print("x1_base =", x1_base)
print("x2 =", x2_float)
print("Approximation:", approx)
print("True sin():   ", real)
print("Error:        ", abs(real - approx))